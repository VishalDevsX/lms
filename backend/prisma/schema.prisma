generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id             Int       @id @default(autoincrement())
  name           String
  email          String    @unique
  password       String
  role           Role      @default(ADMIN)
  profile        Profile?
  students       Student[]
  staffMembers   Staff[]
  expenseRecords Expense[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Profile {
  id      Int     @id @default(autoincrement())
  adminId Int     @unique
  phone   String
  address String
  admin   Admin   @relation(fields: [adminId], references: [id])
  Staff   Staff[]
}

model Student {
  id         Int         @id @default(autoincrement())
  adminId    Int
  rollNumber String      @unique
  feeRecords FeeRecord[]
  results    Result[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  admin      Admin       @relation(fields: [adminId], references: [id])
  feeSystem  FeeSystem[]
}

model Staff {
  id        Int      @id @default(autoincrement())
  adminId   Int
  staffId   String   @unique
  profileId Int?
  results   Result[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  admin     Admin    @relation(fields: [adminId], references: [id])
  profile   Profile? @relation(fields: [profileId], references: [id])
}

model FeeRecord {
  id        Int      @id @default(autoincrement())
  studentId Int
  amount    Float
  paidOn    DateTime
  student   Student  @relation(fields: [studentId], references: [id])
}

model Result {
  id        Int      @id @default(autoincrement())
  studentId Int
  staffId   Int
  subject   String
  grade     String
  date      DateTime @default(now())
  student   Student  @relation(fields: [studentId], references: [id])
  staff     Staff    @relation(fields: [staffId], references: [id])
}

model FeeSystem {
  id        Int      @id @default(autoincrement())
  studentId Int
  amount    Float
  dueDate   DateTime
  paid      Boolean  @default(false)
  student   Student  @relation(fields: [studentId], references: [id])
}

model Expense {
  id          Int      @id @default(autoincrement())
  adminId     Int
  amount      Float
  description String
  date        DateTime @default(now())
  admin       Admin    @relation(fields: [adminId], references: [id])
}

enum Role {
  ADMIN
  STUDENT
  STAFF
}
